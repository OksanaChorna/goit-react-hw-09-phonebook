{"version":3,"sources":["components/UserMenu.js","components/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","store/store.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js"],"names":["UserMenu","dispatch","useDispatch","name","useSelector","authSelectors","getUserName","onLogOut","useCallback","authOperations","logOut","Button","color","type","onClick","AuthNav","component","NavLink","exact","to","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","AppBarComp","classes","isLoggedIn","getIsAuthenticated","className","AppBar","position","Container","maxWidth","Toolbar","id","Typography","variant","PrivateRoute","isAuthenticated","children","redirectTo","routeProps","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","getCurrentUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devToolss","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","state","isLogIn","user","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","getFilter","filter","getAllContacts","items","getFilteredContact","createSelector","normalizedFilter","toLowerCase","contact","includes","addContact","number","then","catch","deleteContact","delete","fetchContacts"],"mappings":"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","file":"static/js/main.665f79e8.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../redux/auth';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  const onLogOut = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <p>Welcome, {name}!</p>\n      </div>\n      <Button color=\"inherit\" type=\"button\" onClick={onLogOut}>\n        Logout\n      </Button>\n    </>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthNav = () => {\n  return (\n    <>\n      <Button color=\"inherit\" component={NavLink} exact to=\"/register\">\n        Registration\n      </Button>\n      <Button color=\"inherit\" component={NavLink} exact to=\"/login\">\n        Login\n      </Button>\n    </>\n  );\n};\n\nexport default AuthNav;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textDecoration: 'none',\n  },\n}));\n\nexport default function AppBarComp() {\n  const classes = useStyles();\n\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"lg\">\n          <Toolbar id=\"toolbar-menu\">\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              className={classes.title}\n              component={NavLink}\n              exact\n              to=\"/\"\n            >\n              Main\n            </Typography>\n\n            {isLoggedIn && (\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                component={NavLink}\n                exact\n                to=\"/contacts\"\n              >\n                PhoneBook\n              </Typography>\n            )}\n\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  children,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\n\nconst PublicRoute = ({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport AppBarComp from './components/AppBar/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PablicRoute from './components/PublicRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomePage = lazy(() =>\n  import('./pages/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser);\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBarComp />\n      <Suspense fallback={<p>Wait...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomePage />\n          </PublicRoute>\n          <PablicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterPage />\n          </PablicRoute>\n          <PablicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginPage />\n          </PablicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsPage />\n          </PrivateRoute>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from '../redux/auth';\nimport { contactsReducer } from '../redux/contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devToolss: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/filterContact');\n","/* eslint-disable import/no-anonymous-default-export */\n\nconst getIsAuthenticated = state => state.auth.isLogIn;\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUserName };\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport default { token, register, logIn, logOut, getCurrentUser };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isLogIn = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({ user, isLogIn, token, error });\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredContact = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    }\n    return contacts;\n  },\n);\n\nexport default { getFilter, getFilteredContact, getAllContacts };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactSuccess,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\n// const fetchContacts = () => dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   axios\n//     .get('/contacts')\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error.message)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n"],"sourceRoot":""}